version: "3"

services:
  zookeeper:
    image: bitnami/zookeeper:latest
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: bitnami/kafka:latest
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE=true
    depends_on:
      - zookeeper

  redis:
    image: redis:6
    environment:
      - REDIS_REPLICATION_MODE=master
    ports:
      - "6379:6379"

  adminer:
    image: adminer
    restart: always
    ports:
      - 8080:8080

  k8s-mig-db-old:
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=test001
      - POSTGRES_USER=test001
      - POSTGRES_DB=msghub
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    restart: always

  k8s-mig-db-new:
    image: postgres:13
    environment:
      - POSTGRES_PASSWORD=test001
      - POSTGRES_USER=test001
      - POSTGRES_DB=msghub
    volumes:
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "15432:5432"
    restart: always

volumes:
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local

networks:
  default:
    external: true
    name: msghub-backend
